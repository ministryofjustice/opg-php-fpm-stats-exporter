name: '[Workflow] Build and Publish Docker Image'
'on':
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - .github/**
permissions:
  contents: write
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: '0'
      - uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Test with the Go CLI
        run: go test -v
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@v1
        id: tag
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          WITH_V: true
          RELEASE_BRANCHES: main
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::311462405659:role/opg-php-fpm-stats-exporter-ci
          role-session-name: GHActions-export-php-metrics
          aws-region: eu-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          role-duration-seconds: 1800
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build and push
        uses: docker/build-push-action@v5
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: export-php-metrics
          ECR_TAG: ${{ steps.tag.outputs.new_tag }}
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: >-
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.ECR_TAG }},
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest,
      - name: Image scan with Trivy
        uses: aquasecurity/trivy-action@master
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: export-php-metrics
          ECR_TAG: ${{ steps.tag.outputs.new_tag }}
        with:
          image-ref: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.ECR_TAG }}
          format: 'sarif'
          output: './trivy-report.sarif'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          github-pat: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./trivy-report.sarif
